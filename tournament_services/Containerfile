# Stage 1: Build stage
FROM fedora:42 AS builder

# Install build dependencies
RUN dnf install -y \
    cmake \
    clang \
    clang++ \
    make \
    git \
    python3 pip cmake perl bison flex autoconf libtool automake && dnf clean all

RUN git clone --depth 1 https://github.com/microsoft/vcpkg.git /opt/vcpkg/
RUN chmod 777 -R /opt/vcpkg
RUN /opt/vcpkg/bootstrap-vcpkg.sh

RUN git clone --depth 1 https://github.com/ttimaizumi/tournaments.git /build

# Set working directory for build
WORKDIR /build

# Create build directory and compile
RUN mkdir -p build && \
    cd build && \
    cmake .. && \
    cmake --build . --config Release

# Stage 2: Runtime stage
FROM fedora:42-minimal

# Set metadata
LABEL maintainer="your-email@example.com"
LABEL description="CMake application on Fedora"

# Install only runtime dependencies (if needed)
# Example: If your app needs specific libraries
# RUN microdnf install -y libstdc++ && microdnf clean all

# Create a non-root user for security
RUN useradd -m -u 1001 appuser

# Set working directory
WORKDIR /app

# Copy the built binary from builder stage
# Adjust the path to match your CMake output
COPY --from=builder /build/build/your-binary-name /app/

# Copy any required runtime files (config files, assets, etc.)
# COPY --from=builder /build/config /app/config/

# Change ownership to non-root user
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose the application port
EXPOSE 8080

# Health check (optional - adjust the endpoint as needed)
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD pidof your-binary-name || exit 1

# Start your application
CMD ["./your-binary-name"]